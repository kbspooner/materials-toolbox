#!/usr/bin/env python

import os
import glob

from tabulate import tabulate

from pymatgen.io.vasp.outputs import Outcar
from pymatgen.io.vasp.inputs import Poscar
from pymatgen.phasediagram.entries import PDEntry
from pymatgen.phasediagram.maker import PhaseDiagram
from pymatgen.phasediagram.analyzer import PDAnalyzer
from pymatgen import Composition, Element


compounds = []
folders = sorted(glob.glob('*/relax-hse/'))
for fol in folders:
    name = fol.replace('/relax-hse/', '')
    pos = Poscar.from_file(os.path.join(fol, 'CONTCAR'))
    comp = pos.structure.composition
    out = Outcar(os.path.join(fol, 'OUTCAR'))
    compounds.append(PDEntry(comp, out.final_energy, name))

bbo = PDEntry(Composition("BaBi2O6"), -65.07481714, "BBO")
compounds.append(bbo)

pd = PhaseDiagram(compounds)
pda = PDAnalyzer(pd)
print pd

print "\nunstable entries:"
table = [[e.name, pda.get_e_above_hull(e)] for e in pd.unstable_entries]
header = ['entry', 'E above hull']
print tabulate(table, headers=header, tablefmt="simple", floatfmt='.5f')

print "\nchemical potentials:"
mus = pda.getmu_vertices_stability_phase(Composition('BaBi2O6'), Element('Ba'))
table = [[mu[e] - pd.el_refs[e].energy_per_atom for e in
          bbo.composition.elements] for mu in mus]
header = ["mu_{}".format(e) for e in bbo.composition.elements]
print tabulate(table, headers=header, tablefmt="simple", floatfmt='.5f')

print_cplap = False
if print_cplap:
    print "CPLAP formatted output:"
    def format_entry(entry, pd):
        s = "{:d}\n".format(len(entry.composition.elements))
        reduced = entry.composition.get_reduced_composition_and_factor()[0]
        for e, a in reduced.get_el_amt_dict().iteritems():
            s += "{:d} {}  ".format(int(a), e)
        form_per_a = pd.get_form_energy_per_atom(entry)
        s += "{:.5f}".format(form_per_a * reduced.num_atoms)
        return s

    output = []
    output.append(format_entry(bbo, pd))
    for entry in pd.all_entries:
        if len(entry.composition.elements) != 1 and entry is not bbo:
            s = format_entry(entry, pd)
            output.append(s)
    print "\n".join(output)
